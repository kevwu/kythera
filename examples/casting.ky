// comparing ints and floats
// 1 != 1.0 // true

// custom type assignment
let myIntType = int
let myFnType = fn<int, str, myIntType> str
let myObjType = obj{
    int a,
    str b,
}

let myObj = {
    a = 99,
    b = "beep",
}

myObj.a

/*
(myObj as myObjType).a

myObj.a + 10

let myCastedObj = myObj as myObjType
typeof myCastedObj

typeof myCastedObj == typeof myObj
typeof myCastedObj == typeof (myObj as myObjType)

// rigid object type use in function
let mySpecificFn = <myObjType object> null {
    object.a
    object.b
    return 10
}

mySpecificFn(myObj as myObjType)
mySpecificFn(myCastedObj)
*/